<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Server Monitoring</title>


    <link rel='stylesheet prefetch' href='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css'>
    <link rel="stylesheet" href="stylesheets/style.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <script src='/socket.io/socket.io.js'></script>
    <script type="text/javascript">
        var socket = io();

        socket.connect('http://localhost', {
            'reconnection': true,
            'reconnectionDelay': 500,
            'reconnectionAttempts': 10
        });

        socket.emit('clientQuery', 'agenttcp');
        socket.on('serverSent', function(message) {

            drawChart(message);
        });
    </script>
</head>

<body>
    <div id="wrapper">
        <div class="page-content-wrapper">
            <nav class="navbar navbar-default">
                <div class="container-fluid">

                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
                        <a class="navbar-brand" href="/main">Main</a>
                    </div>

                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                        <ul class="nav navbar-nav">
                            <li>
                                <a href="/stat_info">System Information</a>
                            </li>
                            <!-- <li><a href="#"></a></li> -->
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">CPU <span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a href="/usage_cpu">Usage</a></li>
                                    <li><a href="/stat_prcs">Processes</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="/usage_mem">Memory</a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Network<span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a href="/usage_tcp">TCP</a></li>
                                    <li><a href="/stat_net">Netstat</a></li>
                                </ul>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">IPCS<span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a href="/stat_ipcq">Queue</a></li>
                                    <li><a href="/stat_ipcm">SHM</a></li>
                                </ul>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Disk<span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a href="/usage_disk">Usage</a></li>
                                    <li><a href="/stat_disk">Filesystem</a></li>
                                </ul>
                            </li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            <li><a href="/signout">Sign Out</a></li>
                        </ul>
                    </div>
                    <!-- /.navbar-collapse -->
                    <div class="row">
                        <div class="col-md-12">
                            <span class="title">&nbsp; Network - TCP</span>
                        </div>
                        <div class="chart-container">
                            <canvas id="myChart"></canvas>
                        </div>
                        <script type="text/javascript">
                            const randomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);
                            const randomByte = () => randomNumber(0, 255)
                            const randomPercent = () => (randomNumber(50, 100) * 0.01).toFixed(2)
                            const randomCssRgba = () => `rgba(${[randomByte(), randomByte(), randomByte(), randomPercent()].join(',')})`

                            function drawChart(test) {
                                var result = [];

                                var count = test[0][0].count; //이더넷 수
                                var eth = [];
                                //이더넷 마다 rcv, snd 변수 생성
                                for (var i = 0; i < test[1].length; i++) {
                                    var item = test[1][i].eth;
                                    item = item.replace('-', '_');
                                    eth.push(item);
                                    eval("var rcv_" + item + "= [];");
                                    eval("var snd_" + item + "= [];");
                                    var rcv_color = randomCssRgba();
                                    var snd_color = randomCssRgba();
                                    //rcv,snd dataset 마다 라인 생성
                                    result.push({
                                        label: "rcv_" + item,
                                        backgroundColor: rcv_color, //NO COLOR UNDER LINE
                                        borderColor: rcv_color,
                                        fill: false
                                    });
                                    result.push({
                                        label: "snd_" + item,
                                        backgroundColor: snd_color, //NO COLOR UNDER LINE
                                        borderColor: snd_color,
                                        fill: false
                                    });
                                };
                                //가장 최근 데이터 호출
                                for (var i = 0; i < test[3].length; i++) {
                                    var time = utcToKst(test[3][i].idate);
                                    var item = test[3][i].eth;
                                    var rcv = bitToMb(test[3][i].rcv);
                                    var snd = bitToMb(test[3][i].snd);

                                    item = item.replace('-', '_');
                                    eval("rcv_" + item + ".push({x:time,y:rcv});");
                                    eval("snd_" + item + ".push({x:time,y:snd});");
                                };
                                //과거 데이터 호출
                                for (var i = 0; i < test[2].length; i++) {
                                    eth.filter(function(item) {
                                        var eth_item = test[2][i].eth;
                                        eth_item = eth_item.replace('-', '_');
                                        if (item === eth_item) {
                                            var idate = test[2][i].idate;
                                            var year = idate.substr(0, 4);
                                            var month = (Number(idate.substr(5, 2)) - 1).toString();
                                            var date = idate.substr(8, 2);
                                            var hour = idate.substr(11, 2);
                                            var rcv = bitToMb(test[2][i].rcv);
                                            var snd = bitToMb(test[2][i].snd);

                                            eval("rcv_" + eth_item + ".push({ x: new Date(year, month, date, hour),y: rcv});");
                                            eval("snd_" + eth_item + ".push({ x: new Date(year, month, date, hour),y: snd});");
                                        }
                                    });
                                }
                                //모든 라인 생성
                                for (var i = 0; i < result.length; i++) {
                                    result[i].data = eval(result[i].label)
                                }




                                var ctx = $('#myChart');
                                var myChart = new Chart(ctx, {
                                    type: 'line',
                                    data: {
                                        datasets: result
                                    },
                                    options: {
                                        tooltips: {
                                            callbacks: {
                                                label: function(tooltipItem, data) {
                                                    return  data.datasets[tooltipItem.datasetIndex].label + ': ' + tooltipItem.yLabel + 'Mb';
                                                }
                                            }
                                        },
                                        responsive: true,
                                        maintainAspectRatio: false,
                                        layout: {
                                            padding: {
                                                left: 0,
                                                right: 0,
                                                top: 0,
                                                bottom: 100
                                            }
                                        },
                                        title: {
                                            display: true,
                                            text: 'Network Usage(MB)'
                                        },
                                        legend: {
                                            display: true
                                        },
                                        scales: {
                                            xAxes: [{
                                                display: true,
                                                type: 'time',
                                                time: {
                                                    format: 'DD MMM'
                                                }
                                            }],
                                            yAxes: [{
                                                ticks: {
                                                    min: 0,
                                                    max: 500,
                                                    beginAtZero: true
                                                },
                                                scaleLabel: {
                                                    display: true,
                                                    labelString: 'MB'
                                                }
                                            }]
                                        }
                                    }
                                });
                            }
                        </script>
                        <!-- middle -->
                        <!--  -->
                    </div>

                    <!-- bottom -->
                    <!--  -->
                </div>
            </nav>
        </div>

    </div>
    <script src='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js'></script>

    <script src="javascripts/index.js"></script>
    <script src="javascripts/timezone.js"></script>
    <script src="javascripts/math.js"></script>

</body>

</html>
